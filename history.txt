./manage.py runserver
./manage.py migrate
./manage.py makemigrations
git push -u origin
git commit -m "fix friend requests, allow user to send and cancel"
git add --all
git status
atom .
. venv/bin/activate.fish
cd ~/documents/codeguild/django_photo/blog/
git commit -m "update readme"
git pull --all
git commit -m "update friends search function"
git add -all
aws config
aws configure
open history.txt 
open history
pip install urlparse
webpack
git commit -m "begin friends page"
git push -u origin master
git commit -m "fix friends select on new album creation"
npm list react
npm list
npm install react-select --save
npm install
rm -rf node_modules
pip freeze >  requirements.txt
history > ./history.txt 
atom 
ls
cd ~/documents/codeguild/reactex/
git commit -m "update working slideshow"
./manage.py runser
npm install babel-plugin-transform-decorators-legacy -S
npm install babel-plugin-add-module-exports --save-dev
npm install babel-plugin-add-module-exports --save-de
npm init
npm install babel-runtime -S
npm install webpack-dev-server --save-dev
npm install gulp
npm install --global gulp
npm install --save
npm install react-image-gallery -S
npm install react-image-gallery
npm install react-responsive-carousel --save
[15/Jun/2016 01:00:23] "GET /static/new_album.css HTTP/1.1" 304 0
[15/Jun/2016 01:00:23] "GET /static/header.css HTTP/1.1" 304 0
[15/Jun/2016 01:00:23] "GET /static/main.css HTTP/1.1" 304 0
016 01:00:23] "GET /static/login.css HTTP/1.1" 304 0
git commit -m "create sorting buttons above the user albums"
git commit -m "set app to have a-z album ordering working"
npm install react-addons-css-transition-group -S
npm install underscore -S
npm install react@0.14.8 -S
..
cd node_modules/
webpack-dev-server --content-base build/
python -m SimpleHTTPServer 8080
python -m SimpleHTTPServer
webpack-dev-server
cat index.html 
open index.html 
dist/
atom package.json 
npm instal
python3 index.jsx 
src/
cd..
git log
candorhub-web/
git clone https://github.com/JeffreyRuder/candorhub-web.git
git clone https://github.com/JeffreyRuder/candorhub-web
intern_example/
inter
mkdir intern_example
../..
npm install radium
npm install imports-loader -S
npm install imports-loader -s
npm install imports-loader
npm -i masonry-layout
npm install imagesloaded
npm install masonry-layout
npm i react-masonry-component
npm install react-masonry-component
npm update
git reset --hard dc9558e4bdf9474dea5ae71b4b9bebdb771a4ce9
./
git reset --hard 487286e6b2090c6331a5f41f07bf809d9991f763
git reset --hard f280b5a3a815682fde8643f0628e39d0410c8c7c
git commit -m "masonry setup started."
npm i react-masonry-mixin
git commit -m "set app just before trying out react masonry mixin"
npm list react-addons-css-transition-group
npm install react-DOM
npm install react-addons-css-transition-group
npm install react
npm install --save react-addons-css-transition-group
blog/
npm install react-addons-css-transition-group --save
npm version
npm --update
npm@^3
cat requirements.txt 
npm install react-addons-pure-render-mixin
git commit -m "before changing ui"
git commit -m "succesfully setup s3 server and begin developing full screen mode"
git commit -all
django_photo/
cd ~/documents/codeguild/
pip install imghdr
pip install boto3
pip install awscli
pip3 install awscli
aws ec2 describe-instances
bash
AWS_ACCESS_KEY = 'AKIAJEIU7WAJGRORW4MQ'
export AWS_ACCESS_KEY = 'AKIAJEIU7WAJGRORW4MQ'
pip install boto
cd ..
dockerizing-django/
cd ~/documents/codeguild/docker_photo_test/
git commit -m "proposal md"
git remote add origin https://github.com/acanida0623/capstone_proposal.git
git init
cd ~/documents/codeguild/capstone_proposal/
Week08/
Week05/
Week1/
CodeGuildBootCamp/
notebook_files/
Codeguild/
Documents/
cd ~
cd documents/Codeguild/django_photo/blog/
cd web/
docker-compose run web /usr/local/bin/python manage.py migrate
docker-compose -f production.yml up -d
docker run -t -i key /bin/bash
docker commit 221f218a6ea4 key
docker ps
eval (docker-machine env img.cloud.product)
docker commit 6f2c58e8bff1 key
sudo apt-get update
docker commit 3f5f43c13401 key
Documents/Codeguild/docker_photo_test/dockerizing-django/
cd
docker-compose up -d
docker export f7f67cdc9f73 > contents.tar
docker export img.cloud.product > contents.tar
docker-machine ip img.cloud.product
docker commit 5832dac9410b key
docker commit 8f77d2977f01 key
docker-compose build
docker commit cad0a5420928 key
docker commit bff03c30e888 key
docker-compose run web /usr/local/bin/python manage.py collectstatic --clear
docker commit e9abc63d6f03 key
docker commit 36aa446324c8 key
docker commit c6bede39e77a key
docker-machine ls
docker-machine rm img.testing
web/
cd documents/Codeguild/docker_photo_test/dockerizing-django/
docker_django/
docker-compose run web /usr/local/bin/python manage.py createsuperuser
docker commit 3e347858f4a4 key
docker commit e8a7600e76c2 key
docker commit 8a06fa4d155d key
docker-machine create --driver digitalocean --digitalocean-access-token 88c92c4ff08f82928b93478d02e06d5f0ba7180eea3e06f539cb916b71148c55  img.cloud.product
docker-machine --debug env default
docker-machine --debug regenerate-certs -f default
eval (docker-machine env img.cloud.production)
eval (docker-machine env default)
sudo docker run 
sudo service docker restart
sudo usermod -aG docker ubuntu
sudo acanida0623 -aG docker ubuntu
docker-machine regenerate-certs img.cloud.production
docker-compose run django python manage.py shell
docker-machine ip img.cloud.production
docker-machine
docker-compose b
docker logs 09d9be794c86
docker logs key
docker commit 09d9be794c86 key
docker-compose run web qwweqwsadafasdf python manage.py createsuperuser
docker-compose run django python manage.py createsuperuser
cat env.db
docker run --rm python manage.py initadmin
class Command(BaseCommand):
docker commit e8a6faf971a9 key
docker run -t -i my /bin/bash
docker commit 7b521fe91876 my
docker commit f0cb904e3d5d my
docker run -t -i f0cb904e3d5d /bin/bash
docker run -t -i mysnapshot8 /bin/bash
docker commit 2c661a74b106 mysnapshot8
docker-compose run web /usr/local/bin/python manage.py collectstatic --noinput
docker run -t -i mysnapshot6 /bin/bash
docker commit 3e11e16c2498 mysnapshot6
docker commit 609fdfe85a03 mysnapshot6
docker-machine ip 
eval (docker-machine env img.cloud.produciton)
docker-machine create --driver digitalocean --digitalocean-access-token a3f1f56979a2f87bd696557433f7ca4956b0f7451efaf8db438633519ff5a460  img.cloud.production
docker-machine regenerate-certs img.testing
eval (docker-machine env img.testing)
docker-machine start img.testing
docker-machine run img.testing
docker-machine stop img.testing
docker-compose run web /usr/local/bin/python manage.py findstatic inlines.min.js
docker-compose run web /usr/local/bin/python manage.py findstatic bundle.js
docker-compose run web /usr/local/bin/python manage.py findstatic
docker-compose  up -d
docker run -t -i mysnapshot5 /bin/bash
docker commit 3e11e16c2498 mysnapshot5
docker commit b6bc170ff18e mysnapshot5
docker p
LS
docker run -t -i mysnapshot2 /bin/bash
docker commit 2e2c5b198da2 mysnapshot2
docker run -t -i mysnapshot /bin/bash
docker commit 6a08ff728d1e mysnapshot
docker commit d3c6cd6e2f59 mysnapshot
docker commit 1d0cffc82be8 mysnapshot
web
ocker run -t -i mysnapshot /bin/bash
docker commit 28a879556875 mysnapshot
docker exec -t -i container_name /bin/bash
docker-compose run web /usr/local/bin/python manage.py collectstatic
django-admin collectstatic
docker-machine ip img.testing
docker-machine create --driver digitalocean --digitalocean-access-token de3e9ad08df14da6a3fb96b50c02c668a07c77099f3ac2aa6f479ac70783721d img.testing
docker-machine create --driver digitalocean --digitalocean-access-token de3e9ad08df14da6a3fb96b50c02c668a07c77099f3ac2aa6f479ac70783721d img.test
$ docker-machine create --driver digitalocean --digitalocean-access-token de3e9ad08df14da6a3fb96b50c02c668a07c77099f3ac2aa6f479ac70783721d img.test
docker-machine ip img.test
eval (docker-machine env img.test)
docker-machine stop img.cloud
docker_photo_test/
eval (docker-machine env img.cloud)
docker-machine env img.cloud
docker_photo/
cd ~/documents/codeguild/dockyard-photo/
env COMPOSE_HTTP_TIMEOUT=200 docker-compose up 
env COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d
$ docker-compose run web /usr/local/bin/python manage.py migrate
docker-machine create --driver digitalocean --digitalocean-access-token de3e9ad08df14da6a3fb96b50c02c668a07c77099f3ac2aa6f479ac70783721d img_test
$ docker-machine create --driver digitalocean --digitalocean-access-token xxxxx docker-sandbox
git clone https://github.com/realpython/dockerizing-django.git
https://github.com/realpython/dockerizing-django.git
.
psql
docker-machine ip img.cloud 
env COMPOSE_HTTP_TIMEOUT=200 docker-compose run web /usr/local/bin/python manage.py migrate
env COMPOSE_HTTP_TIMEOUT=200 docker-compose -f production.yml up -d
docker run --rm -P --publish 127.0.0.1:5432:5432 --name pg_test digitalocean
docker run --rm -P --publish 127.0.0.1:5432:5432 --name pg_test img.cloud
psql -h 104.236.117.72 -p 5432 -d docker -U acanida0623 --password 
psql -h 104.236.117.72 -p 5432 -d docker -U docker --password 
psql -h 104.236.117.72 -p 5432 -d 
docker-machine img.cloud ip
docker-machine ssh img.cloud
docker-machine ssh
docker-compose COMPOSE_HTTP_TIMEOUT=200 docker-compose up
COMPOSE_HTTP_TIMEOUT=200 docker-compose up
COMPOSE_HTTP_TIMEOUT
docker-compose settings
docker-compose run COMPOSE_HTTP_TIMEOUT 120
docker-machine start img.cloud
docker-machine run img.cloud
docker-machine create -d virtualbox img.cloud.dev;
which VBoxManage
docker-machine create -d virtualbox dev;
docker-compose version
docker-machine version
docker-machine create -d virtualbox img.cloud;
docker-machine stop
docker-machine img.cloud stop
docker-machine img.cloud env
docker run -d -p 8000:80 --name webserver kitematic/hello-world-nginx
docker run hello-world
docker-machine inspect img.cloud
ls -l
sudo chown -R $USER:$USER .
docker-machine ip img.cloud
docker-machine ip
docker-compose run web django-admin.py startproject img_cloud .
docker build -t img_cloud .
docker-machine env
docker-machine end
docker-machine rm IMG-Cloud
docker-machine list
docker-machine engine
docker-machine rm djangoapp
docker-machine ip djangoapp
docker-machine create djangoapp --driver=digitalocean --digitalocean-region=nyc3 --digitalocean-size=512mb --digitalocean-access-token=e7d25912bfab18ea0afb8b439c1f51a5f66317757cd05d83ea46401de0cc7c34
docker build -t my-python-app .
docker run -it --rm --name my-running-app img_cloud
docker machine
docker-machine create --driver digitalocean --digitalocean-access-token e7d25912bfab18ea0afb8b439c1f51a5f66317757cd05d83ea46401de0cc7c34 img.cloud
docker-machine create --driver digitalocean --digitalocean-access-token e7d25912bfab18ea0afb8b439c1f51a5f66317757cd05d83ea46401de0cc7c34 img_cloud
docker -machine
$ docker build -t my-python-app .
docker run -i python3-env pip3 install requests 
docker build -t python3-env . 
RUN apt-get install -y python3-pip  docker build -t python3-env . qqq
# install python3 and pip for python3
RUN apt-get update
# make sure the package repository is up to date
FROM ubuntu:13.10
RUN apt-get install -y python3-pip 
docker/
;s
docker-machine inspect IMG-Cloud
docker-machine ip IMG-Cloud
docker-machine create --driver digitalocean --digitalocean-access-token 803b9a094ce79719131e97f8373b5f776a33fb72908a86665a7120f99afe3bec IMG-Cloud
docker-machine create
. <venv>/bin/activate.fish
git commit -m "trash can follow implimented hides cursor"
./manage.py runserve
git commit -m "create user profile model with a one to one field to django user"
clear
python manage.py runserver
./manage.py createsuperuser
python manage.py migrate
python manage.py makemigrations
postgres
psql --version
brew services list
brew services start postgresql
brew services stop postgresql
postgresql services list
postgres services list
initdb `brew --prefix`/var/postgres/data -E utf8``
brew install postgres
brew uninstall postgres
postgresql
postfresql
pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
ln -sfv /usr/local/opt/postgresql
git reset --hard 3d0fc595625fa36a78c0d0d63ee8ae540e770933
git log 
git reset --hard 5d9b7b130552544b5f5a983cab2f97355e4ede77
git reset --hard 42cc0bb20e15cbd2a83df07f04da7aaee21fac88
brew stop postgresql
./manage.py dbshell
git commit -m "upgrade new login page, all deletes working"
Documents/Codeguild/notebook_files/
./manage.py test
python manage.py test
pip install django-widget-tweaks
python manage.py tests.py 
python tests.py 
lg
python manage.py migrate 
git commit -m "before migrations/testing foreign keys image models"
django_p
docker-compose vers
git clone https://github.com/acanida0623/PhotoBook-Django.githttps://github.com/realpython/dockerizing-django.gi
PhotoBook-Django/
git clone https://github.com/acanida0623/PhotoBook-Django.git
hello_django_docker/
dockyard/
mkdir -p dockyard/hello_django_docker
docker run -d -p 80:80 --name webserver nginx
docker stop webserv
docker stop webserver
docker stop nginx
docker --version
git commit -m "almost fix album delete, creating duplicates"
git commit -m "fix album rows and display all albums"
open webpack.config.js 
cd ~/documents/codeguild/django_photo/
webpack 
git commit -m" trash working, can delete first image in albums, can create new albums"
django_photo/blog/
heroku user
heroku
note
ccx
qwwe
qw
git commit -m" trash can somewhat working in progress"
git commit -m "delete function working, cannot deleteing contributing photo albums"
git commit -m "drag and drop working, preloading for each image and then replaces when img done loading"
git commit -m "albums now load and hold img urls, drag and drop working upon album opening, can drop to window"
git statys
python manage.py createsuperuser
photo_album/
photos/
python manage.py migrate blog
git reset --hard e09023e4980a52154178e3b71e35b2296648a7a5
npm i babel-loader babel-preset-es2015 babel-preset-react -S
npm i webpack -S
npm i babel-loader babel-preset-es2015 babel-preset-react
./node_modules/.bin/webpack -d
npm i webpack
pip uninstall Babel
pip uninstall webpack
pip unistall webpack
npm i react react-dom -S
atom .babelrc 
touch .babelrc
pip install requirements.txt 
django-admin startapp photo_album
django-admin startproject photos
pip install whitenoise
pip install dj-database-url
pip install django-password-validation
pip install gunicorn
pip install requests
pip install webpack
pip install babel
pip install psycopg2
pip install django
pyvenv venv
mkdir photo_album
python manage.py makemigrations blog
python manage.py makemigrations 
pip install djangp
python manage.py squashmigrations blog 0001
manage.py squashmigrations blog 0001
python manage.py reset south
python manage.py makemigrations --empty blog
django-admin --version
blog2example/
python manage.py migrate --fake blog zero
python manage.py schemamigration blog --initial
python manage.py schemamigration apps.blog --initial
pip install south
python ./manage.py syncdb --migrate
python manage.py sql blog  ./python manage.py syncdb
python manage.py sql blog
./python manage.py makemigrations polls
syncdb
python manage.py migrate --fake
./manage.py showmigrations --list
./manage.py reset south 
python manage.py makemigrations --empty my-app
sqlite3 db.sqlite3 "delete from django_migrations"
DELETE FROM django_migrations WHERE app='blog'
django
git pull -all
notebook_files/CodeGuildBootCamp/
./manage.py schemamigration research --init
git reset e09023e4980a52154178e3b71e35b2296648a7a5
blog
python manage.py sqlmigrate todo 0001
python makesqlmigrations
python manage.py makemigrations todo
Week09/
l
cd ~/documents/codeguild/notebook_files/CodeGuildBootCamp/
todo/
python manage.py startapp todo
pgtodo/
django-admin startproject pgtodo 
source venv/bin/activate
postgresql_example/
mkdir postgresql_example
git commit -m "jscolor working, changes header color"
which psql
open 
history
brew services
createdb
postgres -D /usr/local/var/postgres
pg_ctl -H /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
pg_ctl -D /usr/local/var/postgres -h /usr/local/var/postgres/server.log start
postgres 
x
npm install --save-dev react-hot-loader
git commit -m "delete button working on small images"
open .gitignore 
git reset
git reset --all
git checkout --all
git checkout .babelrc 
git ignore webpack.config.js 
git commit -m "finished"
git add static/bundle.js 
git add src/index.js 
./node_modules/.bin/webpack -d --watch
atom webpack.config.js 
touch webpack.config.js
git commit -m "drag and drop updated, loads images automatically and saves to user"
git checkout blog/static/script/bundle2.js 
checkout blog/static/script/bundle2.js 
git checkout blog/tests.py 
git reset --hard cb2811303a88efdf2da0be8da52f520018bd0e9e
wk8day1/
wk8day3/
cd ~/documents/codeguild/wk8day1/photo_album/
cd ~/documents/codeguild/test/
touch script.js
test/
la
git commit -m "Fixed use login, create new user now available"
python manage.py migrate blog 
git commit -m "User authentication now required, Loads images based on user, saves author to each image model"
git ignore urls.txt 
python manage.py migrate blog zero
git reset --hard 86ca9e4ecf6784d2e18e39b925690c9e1c9b39bf
git revert -hard 86ca9e4ecf6784d2e18e39b925690c9e1c9b39bf
git revert --hard 86ca9e4ecf6784d2e18e39b925690c9e1c9b39bf
git revert -f 86ca9e4ecf6784d2e18e39b925690c9e1c9b39bf
git head
git commit -m "Ajax get and post requests work, saves urls to django"
git add blog/views.py 
git add blog/static/script/bundle.js 
git add .gitignore 
git commit -m "first commit, ajax post and get requests are 200, need to fix url save"
git remote add origin https://github.com/acanida0623/PhotoBook-Django.git
git add runtime.txt 
git add requirements.txt 
git add mvp/
git add manage.py 
git add blog/
ls blog/
python manage.py shell
python manage.py make migrations blog
django_
touch index.html
mkdir wk8day3
cd ~/documents/codeguild/wk8day3/
quit
reactex/
npm install cors
wek8day1/
atom 8.1.md 
cd ~/documents/codeguild/wk8day2/
open test.html
atom ./
touch style.css
mkdir wk8day1
cd ~/documents/codeguild/notebook_files/
git commit -m "fastclick for mobile inserted"
git add fastclick/
heroku open
heroku ps:scale web=1
heroku run python manage.py createsuperuser
heroku run python manage.py migrate
git push heroku master -f
git commit -m "runtime files added"
heroku create superdupersweetblog
cd ~/documents/codeguild/wk7day1/blog/
pip install -r requirements.txt 
.<venv>/bin/activate.fish
.<venv>/bin/activate.fishls
./activate.fish
venv/
venv
wk7day1/blog/
heroku config:set DEBUG_COLLECTSTATIC=1
$ heroku config:set DEBUG_COLLECTSTATIC=1
heroku config:set COLLECTSTATIC=1
heroku open 
heroku run
pip install -r requirements.txt
pip freeze > requirements.txt
brew install postgresql
python
heroku run python manage.py makemigrations
heroku config:set DISABLE_COLLECTSTATIC=1
git push origin master
$ git push heroku master -f
git pull heroku master
git push heroku master
python --version
cat runtime.txt 
$ git push heroku master
heroku create supersweetblog1
python version
heroku create supersweetblog
heroku create andrewsdjangoblog
heroku create andrewsblog
heroku create django-blog
heroku create djangoblog
heroku create django_blog
git push --all
git commit -m "additional files and changes for Heroku"
heroku local web
wk7day1/
atom 7.4.md 
aotm 7.4md
Week7/
cd documents/Codeguild/wk7day1/blog/
sls
git commit -m "login security added comment section added"
npm install bootstrap
python freeze requirements.txt 
freeze requirements.txt 
cd documents/Codeguild/
atom 7.3.md 
cd documents/Codeguild/notebook_files/CodeGuildBootCamp/
cd documents/Codeguild/reactex/
touch post_list.html
templates/blog/
atom 7.2.md 
git commit -m "fixed preloading image filepaths"
git commit -m "fixing caps on filenames"
git commit -m "added gitignore"
atom status
atom .gitignore 
touch .gitignore
git ignore
ld
ls 
source myvenv/bin/activate
git remote add origin https://github.com/acanida0623/django-blog.git
mvp/
python3 manage.py startapp blog
django-admin startproject mvp .
pip install django 
pip install django --upgrade
pip install --upgrade
pip3 install django
wk7day1/DjangoBlog/
brew upgrade
brew install python3
brew install python3 --upgrade
python3 version
brew update 
pip3 install python3
DjangoBlog/
lw
djangoblog/
git remote add origin https://github.com/acanida0623/djangoblog.git
git intit
open 0001_initial.py 
migrations/
atom admin.py 
from .models import Post
from django.contrib import admin
mvp
python manage.py makemigrations blog`
atom models.py 
atom settings.py 
python manage.py startapp blog
pyvenv
mkdir DjangoBlog
mkdir wk7day1
atom Week7/
python3 tenthousand.py
tenthousand/
python3 blackjack.py 
Python_blackjack/
pip install atom
install atom
atom 6.4.md 
open 6.4.md 
Week6/
git remote add origin https://github.com/acanida0623/requests_practice.git
git commit -m "requests practice working"
git add burrito/
git add WeatherApiHTTPRequest/
wk6day4/
burrito/
open HTTP_Request.html 
WeatherApiHTTPRequest/
atom style.css
touch HTTP_Request.html
touc HTTP_Requests.html
mkdir wk6day4
atom 6.3.md
Documents/Codeguild/notebook_files/CodeGuildBootCamp/
touch index.html pretty.css
mkdir test
git push -u origin 
git commit -m "changed function to show dealers to card to use recursion and call itself with timeouts if score calls for additional card to be drawn"
git commit -m "Chips that are bet now automatically combine after more than 8 chips are bet"
git add index.html src/index.js static/blackjacksheet.css static/bundle.js 
python3 rain_to_js.py 
touch style
las
atom script.js 
atom index.html 
wk6day3/
mkdir wk6day3/
jupyter notebook .
npm install --save react-keydown
git commit -m "split hands button fully functional, deactivates when appropriate"
git push -f origin master
git commit -m "messages for hand results added, split hands button needs to deactivate "
git checkout static/images/buttons/splitdisabled.psd
git checkout static/images/splitdown.psd 
git checkout static/images/split.psd 
git add static/bu
git add static/blackjacksheet.css 
git add static/images/splitdown.psd 
git add static/images/split.psd 
git add static/images/buttons/splitdown.png
git add static/images/buttons/splitdisabled.psd
git add static/images/buttons/split.png static/images/buttons/splitdisabled.png 
touch test.js
rainfall/
exercises/
git clone https://github.com/rstrom/exercises.git
wk6day2/
mkdir wk6day2/
git reset --hard 9a06ff137b1b5ee67e7272d00b9b37d8084cc469
git revert -f  9a06ff137b1b5ee67e7272d00b9b37d8084cc469
git revert 9a06ff137b1b5ee67e7272d00b9b37d8084cc469
atom src/index.js 
atom index.html
git open index.html
git reset 9a06ff137b1b5ee67e7272d00b9b37d8084cc469
git reset 7f44a3b8939d66219fc571bdf51e21958ab19db1
git reset head
git help reset
git reset help
git help
git revert
git commit -m "added recursive timeout steps in between showing dealer's cards"
wk6day1/
mkdir wk6day1
git checkout Week5/5.4.ipynb 
git checkout week5/5.4.ipynb 
git commit -m "split button is working, if ace's can only split and deal one more card"
git commit -a -m "betting working update win lose messages cards stay until new game bet is made and hit button is pressed"
git commit -a 
git add index.html 
python3 manage.py runserver
python3 reverse.py 
atom reverse.py 
touch reverse.py
recursion_practice/
python3 functional_tests.py 
lists/
superlists/
wk5day1/
python3 hanoi.py 
python3
touch hanoi.py
atom hanoi.py
def hanoi(n, fr, to, spare):
wk5day4/
mkdir wk5day4/
git checkout Week5/5.1.ipynb 
git checkout Week4/4.2.ipynb 
git checkout Week4/4.1.ipynb 
git checkout Week3/3.4.ipynb 
git checkout Week3/3.3.ipynb 
git checkout week3/3.3.ipynb 
git checkout Week3/3.2.ipynb 
git -f pull --all
git checkout -all
atom home.html 
touch home.html
templates/
python3 manage.py test
Documents/Codeguild/
git commit -a -m "fixed unmounting issue in react"
git add src/
git commit -a -m"fixing file tree format4"
git commit -a -m"fixing file tree format3"
git commit -a -m"fixing file tree format2"
git stat
git commit -a -m"fixing file tree format"
git commit -a -m"delted venv2"
git merge origin master
git commit -a -m"delted venv"
git commit -m "index.html" 
git commit -m ""
git remote add origin https://github.com/acanida0623/acanida0623.github.io.git
git commit -m "first commit adding blackjack"
git add acanida0623.github.io/
git clone https://github.com/acanida0623/acanida0623.github.io.git
git push origin gh-pages
git push origin
git checkout gh-pages
git branch gh-pages
git branch -D gh-pages
git push origin --delete gh-pages
git commit -m "fixed index location"
git merge remote
git remote merge
git add remote origin https://github.com/acanida0623/acanida0623.github.io.git
git merge
git merge remote master
git fetch origin master
git merge master https://github.com/acanida0623/acanida0623.github.io.git
git pull origin master
git add node_modules/
git add webpack.config.js 
git add static/
git add templates/
git add hello.py 
git add package.json 
git add dist/
git remote remove origin
atom urls.py 
atom views.py 
views.py
atom manage.py 
atom tests.py 
list
python3 manage.py startapp lists
Week5/
jupyter notebook 5.1.ipynb
python3 manage.py
cd superlists/
django-admin.py startproject superlists
pip3 install selenium
atom functional_tests.py 
touch functional_tests.py
nano hello.py 
documen
codeguildbootcamp/
pull -all
python blackjack.py 
git remote push origin
git commit -m "fixed a bug on importing colorama, forgot to change before first push"
git add graphics.py 
cd camel/
mkdir camel
atom program.ml 
touch program.ml
wk4day5/
mkdir wk4day5
brew install ocaml
jupyter notebook 0.0.ipynb
jupyter 0.0.ipynb 
Week0/
git remote add origin https://github.com/acanida0623/Blackjack_Python.git
git remote delete orgin
git merge master https://github.com/acanida0623/blackjackpython
get merge master https://github.com/acanida0623/blackjackpython
git merge master of https://github.com/acanida0623/blackjackpython
Merge branch 'master' of https://github.com/acanida0623/blackjackpython -m "because"
git pull origin
git checkout history.txt 
git ignore history.txt 
git commit -m "blackjack python all finished except betting system, run and playing through terminal"
git add venv/
git add blackjack.py 
git add Deck.py 
git remote add origin https://github.com/acanida0623/blackjackpython.git
cd documents/Codeguild/Python_blackjack/
pip install json
pip install colorama
pip install getch
open requirements.txt 
bin/
pip3 install getch
blackjack_python/
re
wk4day4/
python tdd.py 
manage.py 
pip install selenium
atom tdd.py 
touch tdd.py
code
mkdir wk4day4
jupyter notebook 4.2.ipynb
python hello.py 
python3 tests.py 
wk4day3/
mkdir wk4day3
Week4/
pip install flask
mkdir static
mkdir templates
wk4day1/
open hello.py 
lib/
static
atom index.js 
babel index.js --out-file index2.js
babel input-index.js --out-file output-index2.js
sudo npm install -g  babel-cli
npm uninstall babel
npm install --save-dev babel-preset-react@6.3.13
npm install --save-dev babel-preset-es2015@6.3.13
npm install --save-dev babel-core@6.4.5
npm install --save-dev babel-loader@6.2.1
sudo npm install -g babel
jupyter notebook 4.1.ipynb
webpack --watch
npm install --save react-dom
npm install --save react -dom
webpack index.js 
webpack index.html 
sudo npm install -g webpack
npm install webpack -g
src
npm install webpack
webpack_config.js 
npm install react webpack babel --save
./ atom
tols
yes
--save npm install react webpack babel
npm install react webpack babel
mkdir reactex
bin
atom hello.py 
touch hello.py
pip freeze requirements.txt
mkdir wk4day1
pip install os
atom blackjack.py 
rm requirements.txt 
bin/activate
venv.
site-packages/
python3.4/
wk4day0/
jupyter notebook 4.0.ipynb
jupyter 4.1.ipynb 
git checkout 4.0.ipynb 
cd documents/
python3 requests_practice.py 
atom requests_practice.py 
touch requests_practice.py
pip3 install requests
mkdir wk4day0
cd ~/Documents/Codeguild/notebook_files/
wk1day4/
wk3day1/
jupyter notebook 3.4.ipynb
Week3/
mkdir burrito
wk3day5/
wk3day5
mkdir wk3day5
jupyter notebook 3.3.ipynb 
atom blackjack.html
blackjack/
html/
Desktop/school/
atom index.html grid.html 
touch grid.html
wk3day4/
mkdir wk3day4
~
cd ~/Desktop/school/html/
.ls
git remote
git commit -m "practice layering containers and items with flexbox mode"
git sta
git remote add origin https://github.com/acanida0623/FirstFlexBoxSite.git
wk3day3/
wk3day3
ks
wk3day2/
Codeguild/notebook_files/
open .
atom blackjacksheet.css blackjack.html blackjackjava.js 
jupyter notebook 3.2.ipynb 
mkdir wk3day3
notebooks/
atom blackjacksheet.css 
atom blackjackjava.js 
atom blackjack.html 
cd desktop
atom index.html script.js style.css 
atom *
mkdir wk3day2
git checkout Week2/2.3.ipynb
git checkout Week2/2.2.ipynb
git checkout Week2/2.1.ipynb
git checkout week2/2.1.ipynb
git checkout week2/2.1.ipynb 
git checkout Week2/2.0.ipynb 
git checkout Week1/1.3.ipynb 
git checkout 1.3.ipynb
mkdir wk3day1
Week2/
planets/
collab/
jupyter notebook 2.3.ipynb 
git branch
CodeGuildBootCamp/Week2/
git rm class_practice.py
git remove class_practice.py
Documents/Codeguild/blackjack/
defaults write com.apple.finder AppleShowAllFiles YES
AppleShowAllFiles YES
com.apple.finder AppleShowAllFiles YES
wk1day4/blackjack/
atom quicksort.py 
touch quicksort.py
touch __init__.py
cd sorts/
mkdir sorts
wk3packepractice/
mkdir wk3packepractice
Codeguild/wk1day4/
atom test.py
h
git remote add origin https://github.com/rstrom/planets
git add origin https://github.com/rstrom/planets
git help origin
git origin 
git origin https://github.com/rstrom/planets
git commit -m "hi"
git add hello.txt 
atom hello.txt 
git clone https://github.com/rstrom/planets
atom hi.txt 
touch hi.txt
cd collab/
mkdir collab
git help stash
git help stasg
jupyter notebook 2.2.ipynb 
git commit -m "Updated Graphics, menu is working, key inputs are working for changing ace score" 
usr/bash
curl -d https://api.soundcloud.com/tracks/237603952/plays?client_event_id=aaddb989-13d6-41f4-ab1d-5966107e29b4&policy=ALLOW&client_id=02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea&app_version=1458063810 > song.mp3
curl -D https://api.soundcloud.com/tracks/237603952/plays?client_event_id=aaddb989-13d6-41f4-ab1d-5966107e29b4&policy=ALLOW&client_id=02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea&app_version=1458063810 > song.mp3
curl --help
curl https://api.soundcloud.com/tracks/237603952/plays?client_event_id=aaddb989-13d6-41f4-ab1d-5966107e29b4&policy=ALLOW&client_id=02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea&app_version=1458063810 >> song/mp3
curl -X PUT -d https://api.soundcloud.com/tracks/237603952/plays?client_event_id=aaddb989-13d6-41f4-ab1d-5966107e29b4&policy=ALLOW&client_id=02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea&app_version=1458063810 > song.mp3
curl https://api.soundcloud.com/tracks/237603952/plays?client_event_id=aaddb989-13d6-41f4-ab1d-5966107e29b4&policy=ALLOW&client_id=02gUJC0hH2ct1EGOcYXQIzRFU91c72Ea&app_version=1458063810 > song.mp3
python3 test2.py
jupyter notebook 2.1.ipynb 
easy_install ubuntu
sudo apt-get install python3-tk
sudo apt-get install python-support
sudo install Tkinter
easy_install Tkinter
python3 test.py
python3 test2.py 
pytohn3 test2.py 
atom test2.py 
touch test2.py
atom test.py 
wk1day2/
day3/
wk1day0/
git remote add origin https://github.com/acanida0623/automatedreadabilityindex.git
wk2day0/
interface_practice/
git commit -m "Worked on graphics, can print up to six cards. Current hand score is working. Terminal size automatically adjusts when launched"
"\x1b[8;40;130t"
easy_install msvcrt
easy_install wconio
python3 test.py 
touch test.py
/usr/bash
easy_install term
easy_install pexpect
easy_install pexcept
pip3 install pexcept
wk1day4/ls
wkday2/
wk1day2
python3 ari_finder.py 
atom ari_finder.py 
touch ari_finder.py
mkdir wk2day0
jupyter notebook 1.4.ipynb 
git push -u origin blackjack
jupyter notebook 1.3.ipynb 
git push -u master
git push -u
git commit -m "BlackJack Python, Currently creates deck and deals starting cards to player and dealer, graphics for cards completed."
pep8 blackjack.py 
pep8
pip3 install pep8
python3 blackjack.py ls
sudo port install python2.7 py27-game
python3 card_deck.py 
python3 setup.py install
colorama/
git clone https://github.com/tartley/colorama
mkdir colorama 
python3 colorama-0.3.7.tar.gz install
cd colorama-0.3.7-py2.py3-none-any.whl
Downloads/
cd documents
pip3 install https://github.com/tartley/colorama/blob/master/setup.py
python3 graphics.py 
atom graphics.py 
touch graphics.py
touch blackjack.py
atom card_deck.py 
touch card_deck.py
python3 class_practice.py 
atom class_practice.py
mkdir wk1day4
git checkout 1.2.ipynb 
python3 encryption.py 
python2 
python encryption.py 
easy_install pycrypto
pip3 uninstall pycrypto
python3 encrypt.py
pip3 install pycrypto
atom encrypt.py 
touch decrypt.py
touch encrypt.py
/bin/bash
youtube-dl https://www.youtube.com/watch?v=a2YzAZHdCh4
sudo youtube-dl https://www.youtube.com/watch?v=X5-sg1SnDAM
youtube-dl
sudo youtube-dl update
youtube-dl -t http://www.youtube.com/watch?v=5PF-yJcM8ck
youtube-dl http://www.youtube.com/watch?v=22UiGcxrbu8  --audio-format mp3 --audio-quality 176 -k
youtube-dl https://www.youtube.com/watch?v=X5-sg1SnDAM --audio-format mp3 --audio-quality 176 -k
youtube-dl http://www.youtube.com/watch?v=22UiGcxrbu8  --audio-format mp3 --audio-quality 176 -khttps://www.youtube.com/watch?v=X5-sg1SnDAM
youtube-dl https://www.youtube.com/watch?v=X5-sg1SnDAM
youtube-dl {https://www.youtube.com/watch?v=X5-sg1SnDAM}
sudo chmod a+x /usr/local/bin/youtube-dl
sudo curl https://yt-dl.org/downloads/2014.01.03/youtube-dl -o /usr/local/bin/youtube-dl
XOjjÃÍþåëxÕ×/Ì¹/·ø¦Oõ8Þ¢ïåHÖõ¿dJ2Pë±;8ZiÐãX³Ý°ÞÁH\+
áXOjjÃÍþåëxÕ×/Ì¹/·ø¦Oõ8Þ¢ïåHÖõ¿dJ2Pë±;8ZiÐãX³Ý°ÞÁH\dÏ±¤v¿H++_]o8e%ú±å>`=»O?»Ö9®PÌú!¡ðcTUó}{½¢j]U=ÈN h}ÇÁuígB?ÞC¦Á
XOjjÃÍþåëxÕ×/Ì¹/·ø¦Oõ8Þ¢ïåHÖõ¿dJ2Pë±;8ZiÐãX³Ý°ÞÁH\dÏ±¤v¿H++
á¡@ññDÓç@ÿ.qW¡a¥=7`>Ä¬Nh9^1ÍæñþÒÖdº£\Ú^¢r ÄÂ$Q4ø/»~=uÂêtÖçnu>üèõv}D £Em_]o8e%ú±å>`=»O?»Ö9®PÌú!¡ðcTUóU=ÈN h}ÇÁuígB?ÞC¦Á
jupyter notebook 1.2.ipynb 
¡@ññDÓç@ÿ.qW¡a¥=7`>Ä¬Nh9^1ÍæñþÒÖdº£\Ú^¢r ÄÂ$Q4ø/»~=uÂêtÖçnu>üèõv}D £Em
ûí´Ë
¸b·{µÊ¾×ø}ÊR½¶Tþå
m4
[\-SËþCßÔtj©ïøÓÿ¦êQoÜC¤óxnT!·ÕÕüÑá¨DÐ»výàÃÁèµ
v»©1z¥®d
päE4òU-«û,ò¥à|¶1e,c ÖÑ»5×³´msNÑiÛâ á»iFGDÀ
©:ûÜªâèáÎ.ÔÜ¿Wdjt­a<&EÙÉmï`­y¶§Ë¿az
ìYIy
GsXOjjÃÍþåëxÕ×/Ì¹/·ø¦Oõ8Þ¢ïåHÖõ¿dJ2Pë±;8ZiÐãX³Ý°ÞÁH\dÏ±¤v¿H+­+
ácurl v_]o8e%ú±å>`=»O?»Ö9®PÌú!¡ðcTUó}{½¢jî]ùfÞ0½EµYq7©Í_U=ÈN h}ÇÁuígB?ÞC¦Á
python3 request_practice.py 
python request_practice.py 
python3 encoder.py 
python3 requests.py 
curl -X PUT -d '"hello world"' "https://glowing-heat-3466.firebaseio.com/messages.json"
curl 'https://glowing-heat-3466.firebaseio.com/messages.json'
curl 'https://glowing-heat-3466.firebaseio.com/'
curl -X PUT -d '"hello world"' "https://glowing-heat-3466.firebaseio.com/"
sudo npm install -g firebase-tools
python3 decoder.py
python3 decoder
atom decoder.py 
atom encoder.py 
touch decoder.py
touch encoder.py
mkdir wk1day2
git stats
git checkout 1.1.ipynb 
git checkout 1.0.ipynb 
sudo apt-get install python-pygame
sudo easy_install pygame
pygame
import pygame
python3 pyman.py 
python pyman.py 
class PyManMain:
atom pyman.py 
images/
mkdir images
touch pyman.py
pygame/
mkdir pygame
source .bash_profile
nano .bash_profile
source .bash_profile a
~/.bash_profile:
pip3 install pygame‑1.9.2a0‑cp34‑none‑win_amd64.whl
pip3 install wheel
python blahblah.py 
pygame-1.7.1release/
easy_install pygame
sudo pip install pygame
alias  python = python
help alias
alias 
python help
python status
python -m pygame.docs.__main__
python3 -m pygame.docs.__main__
pip3 install pygame
jupyter notebook 1.1.ipynb 
jupyter notebook 0.3.ipynb 
jupyter notebook 0.2.ipynb 
python3 practice.py 
atom practice.py 
touch practice.py
python3 program.py 
atom program.py 
touch program.py
mkdir interface_practice
pip3 install tkinter
hangman/
wk1day1
1
ten
git commit -m "HTTP REQUESTS TO A SITE AND READS A LINE OF TEXT AKA RANDOM WORD FROM WEBSITE GENERATOR"
git add game.py 
wkday0
git commit -m "Reworked Tenthousand, using 2 modules, no more use of global variables, using parameters and arguments"
git add score.py 
git add display.py 
git add tenthousand.py 
week2day1/
python3 game.py
pip3 install urllib2
atom words.txt 
atom game.py 
Documents/Codeguild/CodeGuildBootCamp/
git fetch origin
jupyter notebook 1.0.ipynb 
atom display.py
atom score.py
git remote add origin https://github.com/acanida0623/week1friday.git
day3
git commit -m "Ten Thousand Dice game working, keeps score, multiple players, still need to set winner"
git remote add origin https://github.com/acanida0623/tenthousandpython.git
git push 
git remote remove
git remote origin https:/github.com/acanida0623/tenthousandpython.git
git remote add origin httpshttps://github.com/acanida0623/TenThousandPython
rm scratch.py 
rm ten.py 
atom ten.py
git remote add origin https://github.com/acanida0623/week2day1.git
git push --set-upstream master master
git push master
git push
get push
git add hangman/
git clone https://github.com/acanida0623/week2day1.git
acanida0623/
git --help
github.com/
git
https:/
rmdir https:
rm d https:
rm d https:/
git merge origin/clean
git init https://github.com/acanida0623/week2day1.git
,,
git ignore __pycache__/
git commit -m "Week2Day1, finished hangman game, gets random word from text file, practiced using module"
git add read_and_write_example/
read_and_write_example/
git add program.py 
git add fibo.py 
atom fibo.cpython-34.pyc 
__pycache__/
python game.py
python3 game.py 
atoms graphics.py 
touch sample.txt
mkdir read_and_write_example
s
touch fibo.py
atom module_practice
mkdir wk1day0
status
git ls
week
lx
git clone https://github.com/rstrom/CodeGuildBootCamp.git
mkdir notebook_files
git commit -m "day3 class exercises/mazegame"
acanida0623.github.io/
pagesgithub/
rm codeguild/
rm codeguild
codeguild/
day2/
git commit -m "Finished phonebook assignemtn, saves to JSON FILE AND LOADS ON LOADING"
python3 phonebook.py 
open phonebook.txt
atom friday_week1.py
atom friday_week1/py
mkdir day3
git commit -m "Ten Thousand Game Added multiplte players turns and fixed holding and rolling"
cd Documents/Day2/
git checkout clean
git ignore scratch.py 
git commit -m "Ten Thousand Game"
python3 tenthousand.py 
git commit -m "Hello world git pages"
echo "Hello world" >>index.html 
git clone https://github.com/acanida0623/acanida0623.github.io
git clone https://github.com/acanida0623/acanida0623/github.io/
git clone https://github.com/username/username.github.io
mkdir pagesgithub
python3 books.py 
day1/
atom mazegame.py
python3 boolgame.py
python3 boolgames.py 
atom boolgame.py 
Documents/day2/
Codeguild/tenthousand/
python3 exercises.py 
atom books.py
atom exercises.py
echo "hello" >> append to end >>ls
open drink
echo "hello" > drink
echo "hello"
touch drink
touch bar
git init scratch
scratch/
mkdir scratch
docu
jupyter notebook 0.1.ipynb 
git checkout 0.1.ipynb 
git branch clean
git merge clean
git merge 
lds
python3 scratch.py 
Documents/Codeguild/tenthousand/
atom tenthousand.py 
TenThousand
day1
python3 tenthousand/
git commit -m "Mazegame complete for class"
python3 mazegame.py 
python3 maz
mkdir day2
git commit -m "Exercises completed from day 2 of class"
git add books.py 
python3 prime.py 
python3 control_flow_exercise.py 
atom control_flow_exercise.py
cp -doc
jupyter notebook
git clone github.com/rstrom/codeguildbootcamp
mkdir notebooks
Documents/day1/
jupyter
cp 
atom prime.py 
touch prime.py
mkdir day1
pip3 install jupyter
python3 madlib.py
python madlib.py
Day0/
day0
python3 
pip3 install flask
madlib/
mysite/
cd mysite/
cd my
python manage.py startapp madlib
python manage.py startapp [app_label]
python manage.py 
django-admin startproject mysite
django-admin startprojet mysite
Documents/firstdjango/
python install django--1.9.3
alias python='python3'
python3 pip install django==1.9.3
pip install Djange==1.9.3
sudo easy_install-2.6 pip
pip
[sudo] pip install virtualenv
python upgrade
python -help
git clone git://github.com/django.django.git
$ git clone git://github.com/django/django.git
sudo easy-install pip
pip install -U pip
python get-pip.py
Django/
apm install autoclose-html
atom main.css
atom main.html
2
python madlib.py 
atom madlib.py
atom madlib.pu 
touch madlib.py
python dice.py
python dice.py 
random.__doc__
atom dice.py 
touch dice.py
python3 hello.py
python3 hello.py 
run hello.py 
cd Day0/
mkdir Day0
doc
man ls
pbpaste
pbpast
Desktop/
cd d
pwd
andrewcanida/
../
cd new_folder1/
mkdir new_folder1
an
cd P
/users/
user
python3 --version
python -v
python3 -v
git 
/
//
brew -v
git push origin secondAndrewBranch
git commit -m "Finished final lab, searches notes for search entry, sepearte searches using commas. Able to select foundations1 and 2 courses. Button to list all of the notes from selected course. lucky button."
git checkout package.json 
git add lib/f2search.js 
git checkout app/lib/f2search.js
git checkout assets/css/main.css 
git checkout README.md
git checkout readme.md
git add ../../lib/foundations1.js 
git add ../../../server.js 
git add ../../index.html 
git add main.js 
git remote -v
jscs main.js 
jshint main.js 
cd ../app/assets/js/
jshint foundations1.js 
jscs foundations1.js 
jshint f2search.js 
jscs f2search.js 
cd lib
jshint server.js 
jscs server.js 
cd assets/
cd js
cd app
cd Desktop/school/finalprep/f2-pdx-simple-site/
jscs index.html 
grunt index.html 
app
node server.js 
git commit -m "saving lucky button and alert message"
git add app/index.html 
git add server.js 
git add app/assets/js/main.js 
subl server.js 
subl se
open server.js 
open ser
open practice.js 
lodash-practice/
lod
f2-pdx-simple-site/
f2
cd lodash-practice/
node practice.js 
ls lodash-practice/
git clone https://github.com/acanida0623/lodash-practice.git
cd finalprep/f2-pdx-simple-site/
cd school/
node test.js 
desk
node server.js
git add lib/
git checkout -- app/lib/f2search.js
git add app/lib/
cd ~/Desktop/school/finalprep/
npm install --save body-parser
git checkout -b secondAndrewBranch
git push origin andrewBranch
git commit -m "finished weekend hw gets random string from server places inside a div"
git add app/assets/css/main.css 
git commit -m "added /joke"
git merge master
git commit -m "class work done"
git add pa
cd express/
npm install --save express
npm install --sace express
$ npm install --save express
https://github.com/acanida0623/f2-pdx-simple-site
subl package.json 
subl pac
git checkout -b andrewBranch
node
git commit -m "Fixed and commented out broken code from Monday"
git checkout -- README.md 
git branc
git push -all
git commit -m "Finished Final Lab Prep"
git add app/
git checkout master 
git checkout mas
git checkout app
history git branch
branch app
git branch app
cd f2-pdx-simple-site/
git clone https://github.com/acanida0623/f2-pdx-simple-site.git
branch
cd f2-pdx-jquery/
git clone https://github.com/acanida0623/f2-pdx-jquery
clone https://github.com/acanida0623/f2-pdx-jquery
~/Desktop/school/monday/
git commit -m "Changed the hard-cording of loops"
git add lab1.js 
cd lab1-beg-track/
sudo npm install -g grunt-cli
sudo npm install -g jshint
sudo npm install - grunt-cli
history sudo
sudo npm install -g jscs
sudo npm install 
cd lab1-adv-track/
git clone https://github.com/acanida0623/lab1-adv-track.git
~/Desktop/school/
history git
history ls
got commit -m "Changed the hard-cording of loops"
node lab1.js 
cd ~/Desktop/school/lab1-adv-track/
jshint sort.js
jshint sorting.js 
jshint
jscs
jscs universal-translator.js 
jshint universal-translator.js 
git push origin andrew
git commit -m "Finished the three parts to lab2"
git add universal-translator.js 
git add sort.js 
git add blob.js 
git add
grunt
jscs sort.js
jshint blob.js
jshint blob.js 
jscs blob.js
jscs blob.js 
grunt 
grunt blob.js
grunt bl
node universal-translator.js 
node sort.js 
node sorting.js 
ls sort.js 
ls sorting
node sort.js
F2JSPDX-Lab2/lab2/
cd Desktop/school/
node sort
node blob.js 
lab2/
git commit -m "First commit with what is finished in class"
git add monday.html 
git add monday.html -m "First commit on what's finished"
subl monday.html 
cd review/
subl  lab2/
git checkout andrew
git pull //all
branches
branchs
cd F2JSPDX-Lab2/
git clone https://github.com/acanida0623/F2JSPDX-Lab2.git
clone https://github.com/acanida0623/F2JSPDX-Lab2.git
git push lab1.js 
git commit lab1.js -m "Finished advanced track"
lab1-adv-track/
git clone https://github.com/acanida0623/lab1-adv-track
cd html/
git clone https://github.com/bethadele/lab1-adv-track
clone https://github.com/bethadele/lab1-adv-track
git commit lab1.js -m "Finished beginner lab"
git status 
git stauts
grunt lab1.js
grunt lab1.js 
node lab1.js
subl lab1.js
sub lab1.js
sublime lab1.js
2 + 2
sudo npm install
--force
2+2
2+@
cd ~/Desktop/school/
git clone https://github.com/acanida0623/lab1-beg-track.git
sudo npom install -g grunt-cli
npm install -g grunt-cli
pws
cd  /usr/local/bin/node
cd lab1‐beg‐track
git push origin 
git push -u origin pdx-w7-uge
git commit README.md -m "updated feedback"
git add README.md 
cd pdx-w7-uge/
git clone https://github.com/acanida0623/pdx-w7-uge
cd ~/Desktop/school/UGE/
git remote add origin https://github.com/acanida0623/unix-and-git-workshop
git push -u origin unix-and-git-workshop
Desktop/school/UGE/unix-and-git-workshop/
de
git pull -u origin master
git checkout master
git checkout
git commit -a -m"Changed message about pushing"
vi git_notes.txt 
git checkout git-notes 
git commit -a -m "updated git notes"
git push -u origin git-notes
git -v
git remote add origin https://github.com/acanida0623/uge-workshop
cd uge_workshop/
head
git commit -m "Added some changes to the git_notes file"
git add git_notes.txt 
touch git_notes.txt
git checkout git-notes
git branch git-notes
git diff
git dif
vi unix_notes.txt 
git commit -m "Added changes to notes about showing hidden files"
git add unix_notes.txt 
ls -la 
rm -Rf history.txt 
git commit -m " adding unix notes, first draft"
cd 
git config --list
cd ~/uge_workshop/
git config --global 
git config --get
git config --get-all
git config
less history.txt 
less unix_notes.txt 
history >>unix_notes.txt 
:q
:
mv moving_around.txt unix_notes.txt
mv moving_around.txt ./uge_workshop/
mkdir uge_workshop
subl moving_around.txt 
lf
cd Pictures/
cd p
cd courtneywimer/
mv history.txt moving_around.txt
cd history.txt
ls history.txt 
history.txt
ls -t
history > history.txt
history | less
man history
man his
man hi
history 5
ls ...
ls ..
ls .
ls users/andrewcanida/
ls User/andrewcanida
ls /Users/D
cd /
ls /Users/documents
ls /
cd ../..
cd .
cd ap
cd Picures
mkdir My\ Dir
mkdir
mkdir My Dir
cd /user/andrewcanida
cd Downloads/
man cd
man pwd
q
ls -man
ls man
man
ls -lt
cd dow
ls -la
cd music
cd /desktop
cd Desktop/
cd document
acanida0623
git --version
GIT --VERSION
curl -fsSL http://git.io/QxUaOQ | sh
curl -fsSL http://git.io/7UHtNA | sh
git config --global user.email 'MR.ANDREW.CANIDA@GMAIL.COM'
git config --global user.name 'ANDREW CANIDA'
git config --global user.name 'YOUR FULL NAME'
brew install git
subl /etc/paths
echo $PATH
echo $EDITOR
set -gx EDITOR 'subl -w'
# Sublime Text
subl ~/.config/fish/config.fish
ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
brew info fish 
brew in
fish_update_completions
curl -fsSL http://git.io/beJs | ruby
git commit -m updated donutshop
git add desktop/school/html/donutshop/donutshopupdate.html
git commit -m "update version of donut shop with css header/footer
git commit
git add desktop/school/html/donutshop/donutshop.html
git commit -m "suggestion box assignment"
git add desktop/school/html/suggestion_box_counter.html
git add desktop/school/html/suggestion_box.html
push -u origin master
git remote add origin https://github.com/acanida0623/suggestionbox.git
echo "# Suggestion_box" >> README.md
git commit -m"suggestion box assigntment" 
git remote add origin https://github.com/acanida0623/Suggestion_box.git
git commit -m "my suggestionbox assignment"
git add 
git add desktop/school/html/html
git remote add origin https://github.com/acanida0623/aboutme.git
git commit -m "first commit"
git add README.md
echo "# aboutme" >> README.md
git commit -m "my first webpage"
git add desktop/school/html/html/
git mkdir
